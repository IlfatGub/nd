<?php

namespace app\models;

use app\modules\admin\models\Fio;
use app\modules\admin\models\Login;
use app\modules\admin\models\MyDate;
use Yii;
use yii\helpers\Html;
use DateTime;
use app\models\Calendar;

/**
 * This is the model class for table "appNotify".
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $user_ct
 * @property string $datetime
 * @property string $date_ct
 * @property integer $type
 * @property string $text
 * @property integer $mail
 * @property integer $repeat
 * @property integer $visible
 */
class AppNotify extends \yii\db\ActiveRecord
{


    public $duplicate = true;
    public $date = true;
    public $_user_id;
    public $_user_ct;
    public $file;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'appNotify';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
//            [['user_id', 'user_ct', 'datetime', 'date_ct'], 'required'],
            [[ 'type', 'mail', 'repeat','visible'], 'integer'],
            [['text'], 'string'],
            [[ 'user_id'], 'safe'],
            [['datetime', 'date_ct'], 'string', 'max' => 50],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'User ID',
            'user_ct' => 'User Ct',
            'datetime' => 'Datetime',
            'date_ct' => 'Date Ct',
            'type' => 'Type',
            'text' => 'Text',
            'mail' => 'Mail',
            'repeat' => 'Repeat',
        ];
    }


    public function getUser()
    {
        return $this->hasOne(Login::className(), ['id' => 'user_id']);
    }
    public function getUser2()
    {
        return $this->hasOne(Login::className(), ['id' => 'user_ct']);
    }


    public function beforeSave($insert)
    {
        $saveContinue = parent::beforeSave($insert);

        if($insert) {
            $this->text = Html::encode($this->text);
            $this->datetime = MyDate::getTimestamp($this->datetime);
            $this->user_ct = Yii::$app->user->id;
            $this->date_ct = MyDate::getTimestamp(date('Y-m-d H:i:s'));

        }
        return $saveContinue ;
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }


    public function setVisible(){
        $this->visible = 1;
        $this->save();
    }

    //Сохраняем запись
    public function record($user_id){
        $notify = new AppNotify();
        $notify->user_id = $user_id;
        $notify->text = $this->text;
        $notify->mail = $this->mail;
        $notify->datetime = $this->datetime;

        if ($notify->save()){
            Yii::$app->mailer->compose()
                ->setFrom('notify@snhrs.ru')
                ->setTo([str_replace(" ", "", Login::getLoginMail($this->user_id))])
                ->setSubject('Календарь')
                ->setHtmlBody($notify->text)
                ->attach($this->setIcsFie($user_id, $notify->text, $notify->datetime))
                ->send();
        }
    }

    /**
     * @return array|\yii\db\ActiveRecord[]
     */
    private static function getQueryUser(){
        return self::find()->orderBy(['datetime' => SORT_DESC])->where(['user_id' => Yii::$app->user->id])->andWhere(['visible' => null])->all();
    }

    /**
     * @return array|\yii\db\ActiveRecord[]
     */
    private static function getQueryAdmin(){
        return self::find()->orderBy(['datetime' => SORT_DESC])->all();
    }


    public static function getAdminNotify(){
        foreach (self::getQueryAdmin() as $item) {
            if($item->visible == 1){
                self::notifyMessage($item, "alert-dark");
            }else{
                if($item->datetime > MyDate::getTimestamp(date('Y-m-d H:i:s'))){
                    self::notifyMessage($item);
                }elseif ($item->visible == 1){
                    self::notifyMessage($item, "alert-info");
                }
            }
        }
    }

    /**
     * Вывод всех уведамлений
     */
    public static function getNotifyAll(){
        foreach (self::getQueryUser() as $item) {
            if($item->datetime > MyDate::getTimestamp(date('Y-m-d H:i:s'))){
                self::notifyMessage($item);
            }else{
                self::notifyMessage($item, "alert-info");
            }
        }
    }

    /**
     * Вывод активнх уведомлений
     */
    public static function getNotifyActive(){
        foreach (self::getQueryUser()  as $item) {
            if($item->datetime > MyDate::getTimestamp(date('Y-m-d H:i:s'))){
                self::notifyMessage($item);
            }
        }
    }

    private static function notifyMessage1($item, $color = "alert-danger"){
        echo "
            <div class=\"alert $color alert-dismissible fade show fs-10 m-1 p-2\" id=\"notify-$item->id\" role=\"alert\">
              <small> <strong>$item->date. $item->_user_ct</strong>   </small>  <div>$item->_user_id $item->text </div> 
              <button type=\"button\" id=\"notify-btn-delete\"  data-id='$item->id' class=\"close p-1  notify-btn-delete\" >
                <span aria-hidden=\"true\">&times;</span>
              </button>
            </div>
        ";
    }


    private static function notifyMessage($item, $color = "alert-danger"){
        $text = "<div class=\"alert $color alert-dismissible fade show fs-10 m-1 p-2\" id=\"notify-$item->id\" role=\"alert\">
              <small> <strong>$item->date. $item->_user_ct</strong>   </small>  <div>$item->_user_id $item->text </div> ";

        if (Yii::$app->user->id == $item->user_id or Yii::$app->user->id == $item->user_ct){
            $text .= "<button type=\"button\" id=\"notify-btn-delete\"  data-id='$item->id' class=\"close p-1 notify-btn-delete\" >
                        <span aria-hidden=\"true\">&times;</span>
                      </button>";
        }

        $text .= "</div>";
        echo $text;
    }

    public function setIcsFie($user_id, $text, $datetime){
        $invite = new Calendar();

        $setEnd = date("Y-m-d h:sA T", $datetime - 18000);
        $setStart = date("Y-m-d h:sA T", $datetime - 14400);

//        echo $setEnd;
//        echo $datetime;
//        die();
        $invite
            ->setSubject(mb_substr($text, 0, 15))
            ->setDescription($text)
            ->setStart(new DateTime($setStart))
            ->setEnd(new DateTime($setEnd))
            ->setLocation("ЗСМиК")
            ->setOrganizer("notify@zsmik.com", "Sitdesk")
            ->addAttendee(Login::getLoginMail($user_id))
            ->generate() // generate the invite
            ->save(); // save it to a file
        // as you may notice this is a static method
        // it is indipendent of the object.
        $download_link = Calendar::getSavedPath();

        return  $download_link;
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->date = MyDate::getDate($this->datetime, 1);
        $this->_user_id = Yii::$app->user->id == $this->user_id ? " " :  Sitdesk::fio($this->user->username,1 ).". ";
//        $this->_user_ct = Yii::$app->user->id == $this->user_ct ? " " :  Sitdesk::fio($this->user2->username,1 ).". ";
        $this->_user_ct = $this->user2->username;
    }

}
